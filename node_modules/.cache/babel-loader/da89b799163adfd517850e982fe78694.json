{"ast":null,"code":"import _defineProperty from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/src/components/UpdateNode/UpdateNode.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport MapContainer from '../Maps/MapContainer';\nimport ClusterMap from '../Maps/ClusterMap';\n\nvar UpdateNode =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateNode, _Component);\n\n  //call the constructor method\n  function UpdateNode(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateNode);\n\n    //Call the constrictor of Super class i.e The Component\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateNode).call(this, props)); //maintain the state required for this component\n\n    _this.NodeIDChangeHandler = function (e) {\n      _this.setState({\n        NodeID: e.target.value\n      });\n    };\n\n    _this.StatusChangeHandler = function (e) {\n      _this.setState({\n        Status: e.target.value\n      });\n    };\n\n    _this.LatitudeChangeHandler = function (e) {\n      _this.setState({\n        Latitude: e.target.value\n      });\n    };\n\n    _this.LongitudeChangeHandler = function (e) {\n      _this.setState({\n        Longitude: e.target.value\n      });\n    };\n\n    _this.InstallationDateChangeHandler = function (e) {\n      _this.setState({\n        InstallationDate: e.target.value\n      });\n    };\n\n    _this.NoSensorsChangeHandler = function (e) {\n      _this.setState({\n        NoSensors: e.target.value\n      });\n    };\n\n    _this.ClusterIDChangeHandler = function (e) {\n      _this.setState({\n        ClusterID: e.target.value\n      });\n    };\n\n    _this.submitCreate = function (e) {\n      //var headers = new Headers();\n      //prevent page from refresh\n      e.preventDefault();\n      var data = {\n        NodeID: _this.state.NodeID,\n        NoSensors: _this.state.NoSensors,\n        Latitude: _this.state.Latitude,\n        Longitude: _this.state.Longitude,\n        Status: _this.state.Status,\n        InstallationDate: _this.state.InstallationDate,\n        ClusterID: _this.state.ClusterID\n      };\n      console.log(\"data in create\" + JSON.stringify(data));\n      localStorage.setItem('Latitude', data.Latitude);\n      localStorage.setItem('Longitude', data.Longitude);\n      localStorage.setItem('nodeID', data.NodeID); //make a post request with the user data\n\n      axios.post('http://localhost:3001/create', data).then(function (response) {\n        console.log(\"Status Code : \", response.status);\n        console.log(\"Data\", response.data);\n\n        _this.setState({\n          redirectVar: React.createElement(Redirect, {\n            to: \"/home\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          })\n        });\n      });\n    };\n\n    _this.submitReset = function (e) {\n      //var headers = new Headers();\n      //prevent page from refresh\n      e.preventDefault();\n\n      _this.setState({\n        NodeID: '',\n        NoSensors: '',\n        Latitude: '',\n        Longitude: '',\n        Status: 'OFF',\n        InstallationDate: '',\n        ClusterID: ''\n      });\n    };\n\n    _this.state = {\n      NodeID: props.location.pathname.substring(12),\n      Latitude: '',\n      Longitude: '',\n      Status: 'OFF',\n      InstallationDate: '',\n      NoSensors: '',\n      ClusterID: '',\n      redirectVar: null //Bind the handlers to this class\n\n    };\n    _this.NodeIDChangeHandler = _this.NodeIDChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.StatusChangeHandler = _this.StatusChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.LatitudeChangeHandler = _this.LatitudeChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.LongitudeChangeHandler = _this.LongitudeChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.InstallationDateChangeHandler = _this.InstallationDateChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.NoSensorsChangeHandler = _this.NoSensorsChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.ClusterIDChangeHandler = _this.ClusterIDChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitCreate = _this.submitCreate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //node id change handler to update state variable with the text entered by the user\n\n\n  _createClass(UpdateNode, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.redirectVar, React.createElement(\"div\", {\n        className: \"create-wrapper-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container form-container col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: '60%'\n        },\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"NodeID\",\n        placeholder: \"Node ID\",\n        onChange: this.NodeIDChangeHandler,\n        value: this.state.NodeID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          width: '60%'\n        },\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"Latitude\",\n        placeholder: \"Latitude\",\n        onChange: this.LatitudeChangeHandler,\n        value: this.state.Latitude,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          width: '60%'\n        },\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"Longitude\",\n        placeholder: \"Longitude\",\n        onChange: this.LongitudeChangeHandler,\n        value: this.state.Longitude,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", (_React$createElement = {\n        className: \"col-sm-12 col-md-7\",\n        style: {\n          width: '60%'\n        }\n      }, _defineProperty(_React$createElement, \"className\", \"form-group\"), _defineProperty(_React$createElement, \"onChange\", this.StatusChangeHandler), _defineProperty(_React$createElement, \"value\", this.state.Status), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"select\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        disabled: \"\",\n        hidden: \"\",\n        value: \"\",\n        selected: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"option\", {\n        value: \"ON\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"ON\"), React.createElement(\"option\", {\n        value: \"OFF\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"OFF\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          width: '60%'\n        },\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"select\",\n        className: \"form-control\",\n        name: \"NoSensors\",\n        placeholder: \"No of sensors\",\n        onChange: this.NoSensorsChangeHandler,\n        value: this.state.NoSensors,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          width: '60%'\n        },\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        name: \"InstallationDate\",\n        placeholder: \"Installation Date\",\n        onChange: this.InstallationDateChangeHandler,\n        value: this.state.InstallationDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          width: '60%'\n        },\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"ClusterID\",\n        placeholder: \"Cluster ID\",\n        onChange: this.ClusterIDChangeHandler,\n        value: this.state.ClusterID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          width: '60%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.submitCreate,\n        className: \"btn btn-success\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Update Smart Node\"), \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"button\", {\n        onClick: this.submitReset,\n        className: \"btn btn-success\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Reset\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return UpdateNode;\n}(Component);\n\nexport default UpdateNode;","map":{"version":3,"sources":["/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/src/components/UpdateNode/UpdateNode.js"],"names":["React","Component","axios","cookie","Redirect","MapContainer","ClusterMap","UpdateNode","props","NodeIDChangeHandler","e","setState","NodeID","target","value","StatusChangeHandler","Status","LatitudeChangeHandler","Latitude","LongitudeChangeHandler","Longitude","InstallationDateChangeHandler","InstallationDate","NoSensorsChangeHandler","NoSensors","ClusterIDChangeHandler","ClusterID","submitCreate","preventDefault","data","state","console","log","JSON","stringify","localStorage","setItem","post","then","response","status","redirectVar","submitReset","location","pathname","substring","bind","width"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport {Redirect} from 'react-router';\nimport MapContainer from '../Maps/MapContainer';\nimport ClusterMap from '../Maps/ClusterMap'\n\nclass UpdateNode extends Component{\n\n        //call the constructor method\n        constructor(props){\n        //Call the constrictor of Super class i.e The Component\n        super(props);\n        //maintain the state required for this component\n        this.state = {\n            NodeID : props.location.pathname.substring(12),\n            Latitude : '',\n            Longitude : '',\n            Status : 'OFF',\n            InstallationDate : '',\n            NoSensors : '',\n            ClusterID : '',\n            redirectVar:null\n        }\n        //Bind the handlers to this class\n        this.NodeIDChangeHandler  = this.NodeIDChangeHandler.bind(this);\n        this.StatusChangeHandler  = this.StatusChangeHandler.bind(this);\n        this.LatitudeChangeHandler  = this.LatitudeChangeHandler.bind(this);\n        this.LongitudeChangeHandler = this.LongitudeChangeHandler.bind(this);\n        this.InstallationDateChangeHandler  = this.InstallationDateChangeHandler.bind(this);\n        this.NoSensorsChangeHandler = this.NoSensorsChangeHandler.bind(this);\n        this.ClusterIDChangeHandler = this.ClusterIDChangeHandler.bind(this);\n        this.submitCreate = this.submitCreate.bind(this);\n    }\n    //node id change handler to update state variable with the text entered by the user\n    NodeIDChangeHandler  = (e) => {\n        this.setState({\n            NodeID : e.target.value\n        })\n    }\n\n    StatusChangeHandler  = (e) => {\n        this.setState({\n            Status : e.target.value\n        })\n    }\n    LatitudeChangeHandler  = (e) => {\n        this.setState({\n            Latitude : e.target.value\n        })\n    }\n    LongitudeChangeHandler  = (e) => {\n        this.setState({\n            Longitude : e.target.value\n        })\n    }\n    InstallationDateChangeHandler  = (e) => {\n        this.setState({\n            InstallationDate : e.target.value\n        })\n    }\n\n\n    NoSensorsChangeHandler  = (e) => {\n        this.setState({\n            NoSensors : e.target.value\n        })\n    }\n\n    ClusterIDChangeHandler  = (e) => {\n        this.setState({\n            ClusterID : e.target.value\n        })\n    }\n\n    //submit Login handler to send a request to the node backend\n    submitCreate = (e) => {\n        //var headers = new Headers();\n        //prevent page from refresh\n        e.preventDefault();\n        const data = {\n            NodeID : this.state.NodeID,\n            NoSensors : this.state.NoSensors,\n            Latitude : this.state.Latitude,\n            Longitude : this.state.Longitude,\n            Status : this.state.Status,\n            InstallationDate : this.state.InstallationDate,\n            ClusterID : this.state.ClusterID\n        }\n\n        console.log(\"data in create\" + JSON.stringify(data));\n        localStorage.setItem('Latitude', data.Latitude);\n        localStorage.setItem('Longitude', data.Longitude);\n        localStorage.setItem('nodeID',data.NodeID);\n        \n        //make a post request with the user data\n        axios.post('http://localhost:3001/create',data)\n            .then(response => {\n                console.log(\"Status Code : \",response.status);\n                console.log(\"Data\", response.data);\n                this.setState({\n                    redirectVar : <Redirect to= \"/home\"/>\n                })\n            });\n            \n    }\n\n    submitReset = (e) => {\n        //var headers = new Headers();\n        //prevent page from refresh\n        e.preventDefault();\n        this.setState({\n            NodeID : '',\n            NoSensors : '',\n            Latitude : '',\n            Longitude : '',\n            Status : 'OFF',\n            InstallationDate : '',\n            ClusterID : ''\n        }\n        );          \n    };\n\n    render(){\n        return(\n            <div>\n                {this.state.redirectVar}\n                <div className = \"create-wrapper-div\">\n                {/* <div className=\"container map-container col\">\n                <h4>Map View of nodes in clusters</h4> */}\n                {/* <MapContainer example = \"foo\"/> */}\n                {/* <ClusterMap/>\n                </div> */}\n                <br/>\n                <div className=\"container form-container col\">                \n                \n                        <div>\n                         <div style={{width: '60%'}} className=\"form-group\">\n                            <input  type=\"text\" className=\"form-control\" name=\"NodeID\" placeholder=\"Node ID\" onChange={this.NodeIDChangeHandler} value={this.state.NodeID}/>\n                        </div> \n                        <br/>\n                       <div style={{width: '60%'}} className=\"form-group\">\n                                <input  type=\"text\" className=\"form-control\" name=\"Latitude\" placeholder=\"Latitude\" onChange={this.LatitudeChangeHandler} value={this.state.Latitude}/>\n                        </div>\n                        <br/>\n                        <div style={{width: '60%'}} className=\"form-group\">\n                                <input  type=\"text\" className=\"form-control\" name=\"Longitude\" placeholder=\"Longitude\" onChange={this.LongitudeChangeHandler} value={this.state.Longitude}/>\n                        </div>\n                        <br/> \n                        {/* <div class=\"dropdown\">\n                        <div class=\"col-sm-12 col-md-7\" style={{width: '60%'}} Name=\"form-group\" onChange={this.SensorTypeChangeHandler} value={this.state.SensorType}>     \n                        <select Name=\"form-control\">\n                                <option disabled=\"\" hidden=\"\" value=\"\" selected=\"selected\">Sensor Type</option>\n                                <option value=\"Temperature\">Temperature</option>\n                                <option value=\"Humidity\">Humidity</option>\n                                <option value=\"PM2.5\">Particulate Matter(PM2.5)</option>\n                        </select>\n                        </div>\n                        </div>\n                        <br/> */}\n                        <div className=\"dropdown\">\n                        <div className=\"col-sm-12 col-md-7\" style={{width: '60%'}} className=\"form-group\" onChange = {this.StatusChangeHandler} value={this.state.Status}>     \n                        <select className=\"form-control\">\n                                <option disabled=\"\" hidden=\"\" value=\"\" selected=\"selected\">Status</option>\n                                <option value=\"ON\">ON</option>\n                                <option value=\"OFF\">OFF</option>\n                        </select>\n                        </div>\n                        </div>\n                        <br/>\n                        <div style={{width: '60%'}} className=\"form-group\">\n                                <input  type=\"select\" className=\"form-control\" name=\"NoSensors\" placeholder=\"No of sensors\" onChange={this.NoSensorsChangeHandler} value={this.state.NoSensors}/>\n                        </div>\n                        <br/>\n                        {/* <div style={{width: '60%'}} className=\"form-group\">\n                                <input  type=\"text\" className=\"form-control\" name=\"PollingFrequency\" placeholder=\"Frequency of polling\" onChange={this.FrequencyChangeHandler} value={this.state.Frequency}/>\n                        </div>\n                        <br/> */}\n                        <div style={{width: '60%'}} className=\"form-group\">\n                                <input  type=\"date\" className=\"form-control\" name=\"InstallationDate\" placeholder=\"Installation Date\" onChange={this.InstallationDateChangeHandler} value={this.state.InstallationDate}/>\n                        </div>\n                        <br/>\n                        <div style={{width: '60%'}} className=\"form-group\">\n                                <input  type=\"text\" className=\"form-control\" name=\"ClusterID\" placeholder=\"Cluster ID\" onChange={this.ClusterIDChangeHandler} value={this.state.ClusterID}/>\n                        </div>\n                        <br/>\n                        <div style={{width: '60%'}}>\n                            <button onClick={this.submitCreate} className=\"btn btn-success\" type=\"submit\">Update Smart Node</button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <button onClick={this.submitReset} className=\"btn btn-success\" type=\"submit\">Reset</button>\n                        </div>\n                        </div>\n                        <div>\n                            {/* <img src = {icon}></img> */}    \n                        </div> \n                    \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UpdateNode;"]},"metadata":{},"sourceType":"module"}