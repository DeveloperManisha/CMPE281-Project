{"ast":null,"code":"import _classCallCheck from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/src/components/Graphs/Wind.js\";\nimport axios from 'axios';\n\nvar React = require('react');\n\nvar Component = React.Component;\n\nvar CanvasJSReact = require('../../canvasjs.react');\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar updatedInterval;\nvar newDps = []; //var dps = [{x: 1, y: 10}, {x: 2, y: 13}, {x: 3, y: 18}, {x: 4, y: 20}, {x: 5, y: 17},{x: 6, y: 10}, {x: 7, y: 13}, {x: 8, y: 18}, {x: 9, y: 20}, {x: 10, y: 17}];   //dataPoints.\n\nvar dps = [];\nvar xVal = 0;\nxVal = Date.now(); //var xVal = dps.length + 1;\n//console.log(\"xval\" + xVal)\n\nvar yVal = 15;\nvar updateInterval = 1000;\n\nvar Wind =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Wind, _Component);\n\n  function Wind(props) {\n    var _this;\n\n    _classCallCheck(this, Wind);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wind).call(this, props));\n    console.log(\"sensorid\" + props.location.pathname.substring(11));\n\n    _this.setState({\n      sensorid: props.location.pathname.substring(11)\n    });\n\n    _this.updateChart = _this.updateChart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.stopGraph = _this.stopGraph.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.startGraph = _this.startGraph.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Wind, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      updatedInterval = setInterval(this.updateChart, updateInterval);\n      this.setState({\n        sensorid: this.props.location.pathname.substring(11)\n      });\n    }\n  }, {\n    key: \"stopGraph\",\n    value: function stopGraph() {\n      this.chart.options.data[0].dataPoints = newDps;\n      this.chart.render();\n      clearInterval(updatedInterval);\n    }\n  }, {\n    key: \"updateChart\",\n    value: function updateChart() {\n      function getRandomInt(min, max) {\n        return Math.random() * (max - min + 1) + min;\n      } //yVal = yVal +  Math.round(5 + Math.random() *(-5-5));\n\n\n      var yVal = getRandomInt(1, 7);\n      console.log(yVal); //insert into db\n\n      var data = {\n        sensorid: this.state.sensorid,\n        windspeed: yVal,\n        timestamp: xVal //make a post request with the user data\n\n      };\n      axios.post('http://localhost:3001/windsensor', data).then(function (response) {});\n      dps.push({\n        x: xVal,\n        y: yVal\n      });\n      xVal++;\n\n      if (dps.length > 10) {\n        dps.shift();\n        newDps = dps;\n      }\n\n      this.chart.render();\n    }\n  }, {\n    key: \"startGraph\",\n    value: function startGraph() {\n      window.location.reload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var options = {\n        title: {\n          text: \"Wind Speed Sensor Data Generation\"\n        },\n        axisX: {\n          interval: 1\n        },\n        data: [{\n          type: \"line\",\n          dataPoints: dps\n        }]\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(CanvasJSChart, {\n        options: options,\n        onRef: function onRef(ref) {\n          return _this2.chart = ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.stopGraph,\n        className: \"btn btn-danger\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Stop Sensor\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"button\", {\n        onClick: this.startGraph,\n        className: \"btn btn-success\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Start Sensor\")));\n    }\n  }]);\n\n  return Wind;\n}(Component);\n\nexport default Wind;","map":{"version":3,"sources":["/Users/manishashivshette/Documents/ManishaStudies/CMPE281/CMPE281-Project/src/components/Graphs/Wind.js"],"names":["axios","React","require","Component","CanvasJSReact","CanvasJS","CanvasJSChart","updatedInterval","newDps","dps","xVal","Date","now","yVal","updateInterval","Wind","props","console","log","location","pathname","substring","setState","sensorid","updateChart","bind","stopGraph","startGraph","setInterval","chart","options","data","dataPoints","render","clearInterval","getRandomInt","min","max","Math","random","state","windspeed","timestamp","post","then","response","push","x","y","length","shift","window","reload","title","text","axisX","interval","type","ref"],"mappings":"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","sourcesContent":["import axios from 'axios';\nvar React = require('react');\nvar Component = React.Component;\nvar CanvasJSReact = require('../../canvasjs.react');\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nvar updatedInterval;\nvar newDps = [];\n//var dps = [{x: 1, y: 10}, {x: 2, y: 13}, {x: 3, y: 18}, {x: 4, y: 20}, {x: 5, y: 17},{x: 6, y: 10}, {x: 7, y: 13}, {x: 8, y: 18}, {x: 9, y: 20}, {x: 10, y: 17}];   //dataPoints.\nvar dps = []\nvar xVal = 0\n\nxVal = Date.now();\n//var xVal = dps.length + 1;\n//console.log(\"xval\" + xVal)\nvar yVal = 15;\nvar updateInterval = 1000;\n\nclass Wind extends Component {\n\tconstructor(props) {\n        super(props);\n        console.log(\"sensorid\" + props.location.pathname.substring(11))\n\t\tthis.setState({\n\t\t\tsensorid : props.location.pathname.substring(11)\n\t\t})\n\t\tthis.updateChart = this.updateChart.bind(this);\n\t\tthis.stopGraph = this.stopGraph.bind(this);\n\t\tthis.startGraph = this.startGraph.bind(this);\n\t}\n\tcomponentDidMount() {\n        updatedInterval = setInterval(this.updateChart, updateInterval);\n        this.setState({\n\t\t\tsensorid : this.props.location.pathname.substring(11)\n\t\t})\n\t}\n\n\tstopGraph() {\n\t\tthis.chart.options.data[0].dataPoints = newDps;\n\t\tthis.chart.render();\n\t\tclearInterval(updatedInterval);\n\t}\n\n\tupdateChart() {\n\t\tfunction getRandomInt(min, max) {\n\t\t\treturn (Math.random() * (max - min + 1) + min);\n\t\t  }\n\n\t\t//yVal = yVal +  Math.round(5 + Math.random() *(-5-5));\n\t\tvar yVal = getRandomInt(1,7);\n        console.log(yVal)\n\t\t//insert into db\n\t\tconst data = {\n\t\t\tsensorid : this.state.sensorid,\n\t\t\twindspeed : yVal,\n\t\t\ttimestamp : xVal\n        }      \n        //make a post request with the user data\n        axios.post('http://localhost:3001/windsensor',data)\n            .then(response => {\n\t\t\t});\n\n\t\t\n\t\t\t\n\t\tdps.push({x: xVal,y: yVal});\n\t\txVal++;\n\t\tif (dps.length >  10 ) {\n\t\t\tdps.shift();\n\t\t\tnewDps = dps;\n\t\t}\n\t\tthis.chart.render();\n\t}\n\n\tstartGraph(){\n\t\twindow.location.reload();\n\t} \n\n\n\trender() {\n\t\tconst options = {\n\t\t\ttitle :{\n\t\t\t\ttext: \"Wind Speed Sensor Data Generation\"\n\t\t\t},\n\t\t\taxisX:{\n\t\t\t  interval: 1,\n\t\t\t},\n\t\t\tdata: [{\n\t\t\t\ttype: \"line\",\n\t\t\t\tdataPoints : dps\n\t\t\t}]\n\t\t}\n\t\treturn (\n\t\t<div>\n\t\t\t<center>\n\t\t\t<CanvasJSChart options = {options}\n\t\t\t\t onRef={ref => this.chart = ref}\n\t\t\t/>\n\t\t\t<button onClick={this.stopGraph} className=\"btn btn-danger\" type=\"submit\">Stop Sensor</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t<button onClick={this.startGraph} className=\"btn btn-success\" type=\"submit\">Start Sensor</button>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t\t</center>\n\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default Wind;"]},"metadata":{},"sourceType":"module"}